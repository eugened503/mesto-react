{"version":3,"sources":["components/Header.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Card","props","isOwn","card","owner","_id","currentUser","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","id","link","onClick","onCardClick","name","type","onCardDelete","aria-label","onCardLike","length","CurrentUserContext","React","createContext","Main","useContext","avatar","onEditAvatar","about","onEditProfile","onAddPlace","cards","map","key","Footer","ImagePopup","isOpen","method","action","onClose","PopupWithForm","onSubmit","title","children","api","baseUrl","authorization","this","_baseUrl","_authorization","url","params","headers","fetch","then","res","ok","json","Promise","reject","status","_fetch","data","body","JSON","stringify","EitProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","defaultValue","onChange","target","value","required","placeholder","minLength","maxLength","pattern","EditAvatarPopup","refAvatar","useRef","e","onUpdateAvatar","current","ref","AddPlacePopup","nameRef","linkRef","App","setСurrentUser","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","showImage","setShowImage","closeAllPopups","getUserInfoServer","catch","err","console","log","getInitialCards","arr","window","addEventListener","Provider","deleteLikeCard","putLikeCard","newCard","newCards","c","deleteCard","filter","changeAvatar","EditProfilePopup","sendUserInfo","sendCard","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.bd1ca4b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"логотип Место-Россия\" className=\"header__logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  const isOwn = props.card.owner._id === props.currentUser._id;\r\n  const cardDeleteButtonClassName = ( // Переменная, которая будет использоваться в className для кнопки удаления\r\n    `card__trash-button ${isOwn ? '' : 'card__trash-button_hidden'}`\r\n  );\r\n\r\n  const isLiked = props.card.likes.some(item => item._id === props.currentUser._id); // Определение лайка пользователя\r\n  const cardLikeButtonClassName = (// Переменная, которая будет использоваться в className для кнопки лайка\r\n    `card__like-button ${isLiked ? 'card__like-button_active' : ''}`\r\n  );\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"card__image\" alt=\"ваше фото\" id=\"myImg\" src={props.card.link} onClick={handleClick} />\r\n      <h2 className=\"card__title\">{props.card.name}</h2>\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick} aria-label=\"корзина\"></button>\r\n      <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"лайк\"></button>\r\n      <h2 className=\"card__like-sum\">{props.card.likes.length > 0 ? `${props.card.likes.length}` : 0} </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__image\" alt=\"Портрет автора\" />\r\n        <div className=\"header__pencil\" onClick={props.onEditAvatar} />\r\n        <div className=\"profile-info\">\r\n          <div className=\"information\">\r\n            <h1 className=\"profile-info__title\">{currentUser.name}</h1>\r\n            <p className=\"profile-info__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n          <button type=\"button\" className=\"profile-info__button\" aria-label=\"редактировать профиль\" onClick={props.onEditProfile} />\r\n        </div>\r\n        <button type=\"button\" className=\"profile__add-button\" aria-label=\"добавить фото\" onClick={props.onAddPlace} />\r\n      </section>\r\n      <section className=\"cards\">\r\n        {props.cards.map((item) => {\r\n          return (\r\n            <Card card={item}\r\n              key={item._id}\r\n              onCardClick={props.onCardClick}\r\n              currentUser={currentUser}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props){\r\n        return (\r\n            <section className={`popup popup-enlargement ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup__container-enlargement\" name=\"container\" method=\"post\" action=\"#\">\r\n                <img src={props.card.link} alt=\"ваше фото\" className=\"popup__img-enlargement\" />\r\n                <h2 className=\"popup__title popup__title-enlargement\">{props.card.name}</h2>\r\n                <button type=\"button\" className=\"popup__close-button popup__close-button-enlargement\"\r\n                    aria-label=\"закрыть\" onClick={props.onClose}></button>\r\n            </form>\r\n        </section>\r\n        )\r\n      }\r\n\r\nexport default ImagePopup","import React from 'react';\r\n\r\n  function PopupWithForm(props){ \r\n    return (\r\n        <section className={props.isOpen ? `popup popup-${props.name} popup_opened`:`popup popup-${props.name}`}>\r\n        <form onSubmit={props.onSubmit} className=\"popup__container popup__form\" >\r\n            <h2 className=\"popup__title\">{props.title}</h2>\r\n            {props.children}\r\n            <button type=\"submit\" className=\"popup__btn popup__button\" aria-label=\"сохранить\"\r\n                id=\"active-passive-btn\">Сохранить</button>\r\n            <button type=\"button\" className=\"popup__close-button\" aria-label=\"закрыть\" onClick = {props.onClose}></button>\r\n        </form>\r\n    </section>\r\n    )\r\n  }\r\n\r\n  export default PopupWithForm","\r\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12'; //базовый URL\r\nconst authorization = 'b6efac6e-fe72-4acc-8171-d974e56a542c'; //мой идентификатор\r\n\r\nclass Api {\r\n  constructor({ baseUrl, authorization }) {\r\n    this._baseUrl = baseUrl;\r\n    this._authorization = authorization;\r\n  }\r\n\r\n  _fetch(url, params) {\r\n    params.headers = {\r\n      authorization: this._authorization,\r\n      'Content-Type': 'application/json'\r\n    };\r\n    return fetch(this._baseUrl + url, params)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          return Promise.reject(res.status);\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n  }\r\n\r\n  //метод получения карточки с сервера\r\n  getInitialCards(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET'\r\n    })\r\n  }\r\n\r\n  //метод получения имени и рода деятельности пользователя с сервера\r\n  getUserInfoServer(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET'\r\n    })\r\n  }\r\n\r\n  //метод отправления информации о пользователе на сервер и ее обновление\r\n  sendUserInfo(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        name: `${data.name}`,\r\n        about: `${data.about}`\r\n      })\r\n    })\r\n  }\r\n\r\n  //метод отправления карточки на сервер\r\n  sendCard(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: `${data.name}`,\r\n        link: `${data.link}`\r\n      })\r\n    })\r\n  }\r\n\r\n  //метод удаления карточки с сервера\r\n  deleteCard(url) {\r\n    return this._fetch(url, {\r\n      method: 'DELETE'\r\n    })\r\n  }\r\n\r\n  //метод добавления лайка\r\n  putLikeCard(url) {\r\n    return this._fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n  }\r\n//метод удаления лайка\r\ndeleteLikeCard(url) {\r\n  return this._fetch(url, {\r\n    method: 'DELETE'\r\n  })\r\n}\r\n\r\n  ///метод изменения аватара\r\n  changeAvatar(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        avatar: `${data.avatar}`\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({ baseUrl, authorization }); // экземпляр api\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EitProfilePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about)\r\n    }, [currentUser])\r\n\r\n    function handleNameInput(evt) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function handleAboutInput(evt) {\r\n        setDescription(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description\r\n        })\r\n    }\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" onSubmit={handleSubmit} isOpen={props.isOpen} onClose={props.onClose}>\r\n            <input defaultValue={name} onChange={handleNameInput} id=\"name-input\" type=\"text\" required placeholder=\"Ваше имя\" name=\"name\"\r\n                className=\"popup__text popup__text_text-margin popup__input\"\r\n                minLength=\"2\" maxLength=\"40\" pattern=\"[А-Яа-яA-Za-z -]{2,40}\" />\r\n            <span id=\"name-input-error\" className=\"popup__input-error\" />\r\n            <input defaultValue={description} onChange={handleAboutInput} id=\"work-input\" type=\"text\" required placeholder=\"Род деятельности\" name=\"about\" className=\"popup__text popup__text_work-margin popup__input\" minLength=\"2\" maxLength=\"200\" />\r\n            <span id=\"work-input-error\" className=\"popup__input-error\" />\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EitProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const refAvatar = React.useRef(); \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({ avatar: refAvatar.current.value });\r\n  }\r\n  return (\r\n    <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} name=\"avatar\" onSubmit={handleSubmit} title=\"Обновить аватар\">\r\n      <input ref={refAvatar} type=\"url\" id=\"link-input\" placeholder=\"Ссылка на картинку\" required defaultValue=\"\" name=\"avatar\"\r\n        className=\"popup__text popup__text_work-margin popup__link popup__input popup__text_avatar\"\r\n        pattern=\"^(https?:\\/\\/)?([\\w-]{1,32}\\.[\\w-]{1,32})[^\\s@]*$\" />\r\n      <span id=\"link-input-error\" className=\"popup__input-error\" />\r\n    </PopupWithForm>)\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const nameRef = React.useRef(); \r\n  const linkRef = React.useRef();\r\n\r\n  function handleAddPlaceSubmit(e) {\r\n    e.preventDefault();\r\n    props.onAddPlace({\r\n      name: nameRef.current.value,\r\n      link: linkRef.current.value\r\n    })\r\n  }\r\n  return (\r\n    <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} name=\"foto\" title=\"Новое место\" onSubmit={handleAddPlaceSubmit}>\r\n      <input ref={nameRef} type=\"text\" id=\"title-input\"\r\n        placeholder=\"Название\" required defaultValue=\"\" name=\"title\"\r\n        className=\"popup__text popup__text_text-margin popup__name popup__input\"\r\n        minLength=\"1\" maxLength=\"30\" />\r\n      <span id=\"title-input-error\" className=\"popup__input-error\" />\r\n      <input ref={linkRef} type=\"url\" id=\"link-input\" placeholder=\"Ссылка на картинку\" required defaultValue=\"\" name=\"link\" className=\"popup__text popup__text_work-margin popup__link popup__input\" pattern=\"^(https?:\\/\\/)?([\\w-]{1,32}\\.[\\w-]{1,32})[^\\s@]*$\" />\r\n      <span id=\"link-input-error\" className=\"popup__input-error\" />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport api from '../utils/api.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\n\r\nfunction App() {\r\n  const [currentUser, setСurrentUser] = React.useState({}); //получение информации об авторе\r\n  const [cards, setCards] = React.useState([]); //стейт с массивом карточек\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Данные пользователя\"\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Добавление карточки\"\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Изменение аватара\"\r\n  const [selectedCard, setSelectedCard] = React.useState(false); //Хук для определения наличия CSS-класса видимости\r\n  const [showImage, setShowImage] = React.useState({}); //Хук для захвата данных при клике на карточку\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfoServer('/users/me') //получаем информацию о пользователе с сервера\r\n      .then((data) => {\r\n        setСurrentUser(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    api.getInitialCards('/cards') //получаем карточки с сервера\r\n      .then((arr) => {\r\n        setCards(arr); //добавляем карточки в стейт\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  function handleCardClick(data) {\r\n    setSelectedCard(true);\r\n    setShowImage(data);\r\n  }\r\n\r\n  function handleEditProfileClick() { //обработчик для открытия поп-апа \"Данные пользователя\"\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() { //обработчик для открытия поп-апа \"Добавление карточки\"\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() { //обработчик для открытия поп-апа \"Изменение аватара\"\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {  //обработчик для закрытия поп-апов\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\r\n    (!isLiked ? api.putLikeCard(`/cards/likes/${card._id}`) : api.deleteLikeCard(`/cards/likes/${card._id}`))\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleCardDelete(card) { //удаление карточки с сервера\r\n    api.deleteCard(`/cards/${card._id}`)\r\n      .then(() => {\r\n        const newCards = cards.filter((item) => item._id !== card._id);\r\n        setCards(newCards); //обновление стейта\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleUpdateUser(data) { // обновление информации о пользователе\r\n    api.sendUserInfo('/users/me', data)\r\n      .then((res) => {\r\n        setСurrentUser(res);  //обновление стейта\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(data) { // обновление аватара пользователя\r\n    api.changeAvatar('/users/me/avatar', data)\r\n      .then((res) => {\r\n        setСurrentUser(res); //обновление стейта\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleAddPlace(data) { // добавление новой карточки\r\n    api.sendCard('/cards', data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]); //добавление новой карточки в массив\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  React.useEffect(() => { //закрытие поп-апов нажатием на клавишу 'Escape'\r\n    window.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape') {\r\n        closeAllPopups();\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"page\">\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n          <Header />\r\n          <Main\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\r\n          <PopupWithForm name=\"deleting-card\" title=\"Вы уверены?\" />\r\n          <ImagePopup card={showImage} isOpen={selectedCard} onClose={closeAllPopups} />\r\n          <Footer />\r\n        </CurrentUserContext.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}