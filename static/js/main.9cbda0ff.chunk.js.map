{"version":3,"sources":["components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Card","props","id","card","link","onClick","onCardClick","name","type","aria-label","likes","length","api","baseUrl","authorization","this","_baseUrl","_authorization","url","params","headers","fetch","then","res","ok","json","Promise","reject","status","_fetch","method","data","body","JSON","stringify","about","title","avatar","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfoServer","catch","err","console","log","getInitialCards","arr","onEditAvatar","onEditProfile","onAddPlace","map","item","index","key","Footer","ImagePopup","isOpen","action","onClose","PopupWithForm","children","App","isEditProfilePopupOpen","SetIsEditProfilePopupOpen","isAddPlacePopupOpen","SetIsAddPlacePopupOpen","isEditAvatarPopupOpen","SetIsEditAvatarPopupOpen","selectedCard","setSelectedCard","showImage","setShowImage","closeAllPopups","placeholder","required","defaultValue","pattern","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.9cbda0ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"логотип Место-Россия\" className=\"header__logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport React from 'react';\r\n\r\nfunction Card(props) { \r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <img className=\"card__image\" alt=\"ваше фото\" id=\"myImg\" src={props.card.link} onClick={handleClick} />\r\n                <h2 className=\"card__title\">{props.card.name}</h2>\r\n                <button type=\"button\" className=\"card__trash-button\" aria-label=\"корзина\"></button>\r\n                <button type=\"button\" className=\"card__like-button\" aria-label=\"лайк\"></button>\r\n                <h2 className=\"card__like-sum\">{props.card.likes.length > 0 ? `${props.card.likes.length}` : 0} </h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","\r\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12'; //базовый URL\r\nconst authorization = 'b6efac6e-fe72-4acc-8171-d974e56a542c'; //мой идентификатор\r\n   \r\n   class Api {\r\n  constructor({ baseUrl, authorization}) {\r\n    this._baseUrl = baseUrl;\r\n    this._authorization = authorization;\r\n  }\r\n  \r\n  _fetch(url, params) {\r\n    params.headers = {\r\n      authorization: this._authorization,\r\n      'Content-Type': 'application/json'\r\n    };\r\n    return fetch(this._baseUrl + url, params)\r\n    .then((res) => {\r\n      if(!res.ok) {\r\n        return Promise.reject(res.status);\r\n      } else {\r\n        return res.json();\r\n      }\r\n    })\r\n  }\r\n\r\n  //метод получения карточки с сервера\r\n  getInitialCards(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET'\r\n    })\r\n  }\r\n\r\n  //метод получения имени и рода деятельности пользователя с сервера\r\n  getUserInfoServer(url) {\r\n    return this._fetch(url, {\r\n      method: 'GET'\r\n    })\r\n  }\r\n\r\n  //метод отправления информации о пользователе на сервер и ее обновление\r\n  sendUserInfo(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        name: `${data.name}`,\r\n        about: `${data.about}`\r\n      })\r\n    })\r\n  }\r\n\r\n  //метод отправления карточки на сервер\r\n  sendCard(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: `${data.title}`,\r\n        link: `${data.link}`\r\n      })\r\n    })\r\n  }\r\n\r\n  //метод удаления карточки с сервера\r\n  deleteCard(url) {\r\n    return this._fetch(url, {\r\n      method: 'DELETE'\r\n    })\r\n  }\r\n\r\n  //метод отправления лайка\r\n  sendLike(url) {\r\n    return this._fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n  }\r\n\r\n  ///метод изменения аватара\r\n  changeAvatar(url, data) {\r\n    return this._fetch(url, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        avatar: `${data.avatar}`\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({ baseUrl, authorization}); // экземпляр api\r\nexport default  api;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\nimport api from '../utils/api.js';\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState('');\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfoServer('/users/me') //получаем информацию о пользователе с сервера\r\n      .then((data) => {\r\n        setUserName(data.name);\r\n        setUserDescription(data.about);\r\n        setUserAvatar(data.avatar);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`ошибка: ${err}`);\r\n      });\r\n    api.getInitialCards('/cards') //получаем карточки с сервера\r\n      .then((arr) => {\r\n        setCards(arr);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`ошибка: ${err}`);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img src={userAvatar} className=\"profile__image\" alt=\"Портрет автора\" />\r\n        <div className=\"header__pencil\" onClick={props.onEditAvatar}></div>\r\n        <div className=\"profile-info\">\r\n          <div className=\"information\">\r\n            <h1 className=\"profile-info__title\">{userName}</h1>\r\n            <p className=\"profile-info__subtitle\">{userDescription}</p>\r\n          </div>\r\n          <button type=\"button\" className=\"profile-info__button\" aria-label=\"редактировать профиль\" onClick={props.onEditProfile}></button>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__add-button\" aria-label=\"добавить фото\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n      <section className=\"cards\">\r\n        {cards.map((item, index) => {\r\n          return (\r\n            <Card card={item} key={index} onCardClick={props.onCardClick} /> //добавляем карточки и обработчик в разметку\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props){\r\n        return (\r\n            <section className={`popup popup-enlargement ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup__container-enlargement\" name=\"container\" method=\"post\" action=\"#\">\r\n                <img src={props.card.link} alt=\"ваше фото\" className=\"popup__img-enlargement\" />\r\n                <h2 className=\"popup__title popup__title-enlargement\">{props.card.name}</h2>\r\n                <button type=\"button\" className=\"popup__close-button popup__close-button-enlargement\"\r\n                    aria-label=\"закрыть\" onClick={props.onClose}></button>\r\n            </form>\r\n        </section>\r\n        )\r\n      }\r\n\r\n\r\nexport default ImagePopup","import React from 'react';\r\n\r\n  function PopupWithForm(props){ \r\n    return (\r\n        <section className={props.isOpen ? `popup popup-${props.name} popup_opened`:`popup popup-${props.name}`}>\r\n        <form className=\"popup__container popup__form\">\r\n            <h2 className=\"popup__title\">{props.title}</h2>\r\n            {props.children}\r\n            <button type=\"submit\" className=\"popup__btn popup__button\" aria-label=\"сохранить\"\r\n                id=\"active-passive-btn\">Сохранить</button>\r\n            <button type=\"button\" className=\"popup__close-button\" aria-label=\"закрыть\" onClick = {props.onClose}></button>\r\n        </form>\r\n    </section>\r\n    )\r\n  }\r\n\r\n\r\n  export default PopupWithForm","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, SetIsEditProfilePopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Данные пользователя\"\r\n  const [isAddPlacePopupOpen, SetIsAddPlacePopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Добавление карточки\"\r\n  const [isEditAvatarPopupOpen, SetIsEditAvatarPopupOpen] = React.useState(false); // Хук, управляющий внутренним состоянием поп-апа \"Изменение аватара\"\r\n  const [selectedCard, setSelectedCard] = React.useState(false); //Хук для определения наличия CSS-класса видимости\r\n  const [showImage, setShowImage] = React.useState({}); //Хук для захвата данных при клике на карточку\r\n\r\n  function handleCardClick(data) { \r\n    setSelectedCard(true);\r\n    setShowImage(data);\r\n  }\r\n  function handleEditProfileClick() { //обработчик для открытия поп-апа \"Данные пользователя\"\r\n    SetIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() { //обработчик для открытия поп-апа \"Добавление карточки\"\r\n    SetIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditAvatarClick() { //обработчик для открытия поп-апа \"Изменение аватара\"\r\n    SetIsEditAvatarPopupOpen(true);\r\n  }\r\n  function closeAllPopups() {  //обработчик для закрытия поп-апов\r\n    SetIsEditProfilePopupOpen(false);\r\n    SetIsAddPlacePopupOpen(false);\r\n    SetIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <PopupWithForm isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} name=\"avatar\" title=\"Обновить аватар\" children={\r\n          <> <input type=\"url\" id=\"link-input\" placeholder=\"Ссылка на картинку\" required defaultValue=\"\" name=\"avatar\"\r\n            className=\"popup__text popup__text_work-margin popup__link popup__input popup__text_avatar\"\r\n            pattern=\"^(https?:\\/\\/)?([\\w-]{1,32}\\.[\\w-]{1,32})[^\\s@]*$\" />\r\n            <span id=\"link-input-error\" className=\"popup__input-error\"></span>\r\n          </>\r\n        } />\r\n        <PopupWithForm isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} name=\"profile\" title=\"Редактировать профиль\" children={\r\n          <><input id=\"name-input\" type=\"text\" required placeholder=\"Ваше имя\" defaultValue=\"Жак-Ив Кусто\" name=\"name\" className=\"popup__text popup__text_text-margin popup__input\" minLength=\"2\" maxLength=\"40\" pattern=\"[А-Яа-яA-Za-z -]{2,40}\" />\r\n            <span id=\"name-input-error\" className=\"popup__input-error\"></span>\r\n            <input id=\"work-input\" type=\"text\" required placeholder=\"Род деятельности\" defaultValue=\"Исследователь океана\" name=\"about\" className=\"popup__text popup__text_work-margin popup__input\" minLength=\"2\" maxLength=\"200\"></input>\r\n            <span id=\"work-input-error\" className=\"popup__input-error\"></span>\r\n          </>\r\n        } />\r\n        <PopupWithForm isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} name=\"foto\" title=\"Новое место\" children={\r\n          <><input type=\"text\" id=\"title-input\" placeholder=\"Название\" required defaultValue=\"\" name=\"title\" className=\"popup__text popup__text_text-margin popup__name popup__input\" minLength=\"1\" maxLength=\"30\" />\r\n            <span id=\"title-input-error\" className=\"popup__input-error\"></span>\r\n            <input type=\"url\" id=\"link-input\" placeholder=\"Ссылка на картинку\" required defaultValue=\"\" name=\"link\" className=\"popup__text popup__text_work-margin popup__link popup__input\" pattern=\"^(https?:\\/\\/)?([\\w-]{1,32}\\.[\\w-]{1,32})[^\\s@]*$\" />\r\n            <span id=\"link-input-error\" className=\"popup__input-error\"></span>\r\n          </>\r\n        } />\r\n        <PopupWithForm name=\"deleting-card\" title=\"Вы уверены?\" />\r\n        <ImagePopup card={showImage} isOpen={selectedCard} onClose={closeAllPopups} />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}